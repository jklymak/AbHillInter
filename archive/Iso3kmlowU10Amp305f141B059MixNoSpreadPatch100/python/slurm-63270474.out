/home/jklymak/project/jklymak/AbHillInter/python
<xarray.Dataset>
Dimensions:  (XC: 480, XG: 480, YC: 400, YG: 400, Z: 400, Zl: 400, Zp1: 401, Zu: 400, time: 2)
Coordinates: (12/36)
  * XC       (XC) float64 1.5e+03 4.5e+03 7.5e+03 ... 1.436e+06 1.438e+06
  * YC       (YC) float64 1.5e+03 4.5e+03 7.5e+03 ... 1.196e+06 1.198e+06
  * XG       (XG) float64 0.0 3e+03 6e+03 ... 1.431e+06 1.434e+06 1.437e+06
  * YG       (YG) float64 0.0 3e+03 6e+03 ... 1.191e+06 1.194e+06 1.197e+06
  * Z        (Z) float64 -5.0 -15.0 -25.0 ... -3.975e+03 -3.985e+03 -3.995e+03
  * Zp1      (Zp1) float64 0.0 -10.0 -20.0 -30.0 ... -3.98e+03 -3.99e+03 -4e+03
    ...       ...
    rLowW    (YC, XG) float64 dask.array<chunksize=(400, 480), meta=np.ndarray>
    rLowC    (YC, XC) float64 dask.array<chunksize=(400, 480), meta=np.ndarray>
    rhoRef   (Z) float64 dask.array<chunksize=(400,), meta=np.ndarray>
    rSurfW   (YC, XG) float64 dask.array<chunksize=(400, 480), meta=np.ndarray>
    iter     (time) int64 dask.array<chunksize=(1,), meta=np.ndarray>
  * time     (time) timedelta64[ns] 00:00:00 1 days
Data variables:
    UVEL     (time, Z, YC, XG) float64 dask.array<chunksize=(1, 400, 400, 480), meta=np.ndarray>
    VVEL     (time, Z, YG, XC) float64 dask.array<chunksize=(1, 400, 400, 480), meta=np.ndarray>
    WVEL     (time, Zl, YC, XC) float64 dask.array<chunksize=(1, 400, 400, 480), meta=np.ndarray>
    THETA    (time, Z, YC, XC) float64 dask.array<chunksize=(1, 400, 400, 480), meta=np.ndarray>
    PHIHYD   (time, Z, YC, XC) float64 dask.array<chunksize=(1, 400, 400, 480), meta=np.ndarray>
<xarray.Dataset>
Dimensions:  (XC: 480, XG: 480, Z: 400, Zl: 400, Zp1: 401, Zu: 400, time: 2)
Coordinates: (12/36)
  * XC       (XC) float64 1.5e+03 4.5e+03 7.5e+03 ... 1.436e+06 1.438e+06
    YC       float64 6.015e+05
  * XG       (XG) float64 0.0 3e+03 6e+03 ... 1.431e+06 1.434e+06 1.437e+06
    YG       float64 6e+05
  * Z        (Z) float64 -5.0 -15.0 -25.0 ... -3.975e+03 -3.985e+03 -3.995e+03
  * Zp1      (Zp1) float64 0.0 -10.0 -20.0 -30.0 ... -3.98e+03 -3.99e+03 -4e+03
    ...       ...
    rLowW    (XG) float64 dask.array<chunksize=(480,), meta=np.ndarray>
    rLowC    (XC) float64 dask.array<chunksize=(480,), meta=np.ndarray>
    rhoRef   (Z) float64 dask.array<chunksize=(400,), meta=np.ndarray>
    rSurfW   (XG) float64 dask.array<chunksize=(480,), meta=np.ndarray>
    iter     (time) int64 dask.array<chunksize=(1,), meta=np.ndarray>
  * time     (time) timedelta64[ns] 00:00:00 1 days
Data variables:
    UVEL     (time, Z, XG) float64 dask.array<chunksize=(1, 400, 480), meta=np.ndarray>
    VVEL     (time, Z, XC) float64 dask.array<chunksize=(1, 400, 480), meta=np.ndarray>
    WVEL     (time, Zl, XC) float64 dask.array<chunksize=(1, 400, 480), meta=np.ndarray>
    THETA    (time, Z, XC) float64 dask.array<chunksize=(1, 400, 480), meta=np.ndarray>
    PHIHYD   (time, Z, XC) float64 dask.array<chunksize=(1, 400, 480), meta=np.ndarray>
[                                        ] | 0% Completed |  0.0s[####################                    ] | 50% Completed |  0.2s[####################                    ] | 50% Completed |  0.3s[####################                    ] | 50% Completed |  0.4s[####################                    ] | 50% Completed |  0.5s[####################                    ] | 50% Completed |  0.6s[####################                    ] | 50% Completed |  0.7s[####################                    ] | 50% Completed |  0.8s[####################                    ] | 50% Completed |  0.9s[####################                    ] | 50% Completed |  1.0s[####################                    ] | 50% Completed |  1.1s[####################                    ] | 50% Completed |  1.2s[####################                    ] | 50% Completed |  1.3s[####################                    ] | 50% Completed |  1.4s[####################                    ] | 50% Completed |  1.5s[####################                    ] | 50% Completed |  1.6s[####################                    ] | 50% Completed |  1.7s[####################                    ] | 50% Completed |  1.8s[####################                    ] | 50% Completed |  1.9s[####################                    ] | 50% Completed |  2.0s[####################                    ] | 50% Completed |  2.1s[####################                    ] | 50% Completed |  2.2s[####################                    ] | 50% Completed |  2.3s[####################                    ] | 50% Completed |  2.4s[####################                    ] | 50% Completed |  2.5s[####################                    ] | 50% Completed |  2.6s[####################                    ] | 50% Completed |  2.7s[####################                    ] | 50% Completed |  2.8s[####################                    ] | 50% Completed |  2.9s[####################                    ] | 50% Completed |  3.0s[####################                    ] | 50% Completed |  3.1s[####################                    ] | 50% Completed |  3.2s[####################                    ] | 50% Completed |  3.3s[####################                    ] | 50% Completed |  3.4s[####################                    ] | 50% Completed |  3.5s[####################                    ] | 50% Completed |  3.6s[####################                    ] | 50% Completed |  3.7s[####################                    ] | 50% Completed |  3.8s[####################                    ] | 50% Completed |  3.9s[####################                    ] | 50% Completed |  4.0s[####################                    ] | 50% Completed |  4.1s[####################                    ] | 50% Completed |  4.2s[####################                    ] | 50% Completed |  4.3s[####################                    ] | 50% Completed |  4.4s[####################                    ] | 50% Completed |  4.5s[####################                    ] | 50% Completed |  4.6s[####################                    ] | 50% Completed |  4.7s[####################                    ] | 50% Completed |  4.8s[####################                    ] | 50% Completed |  4.9s[####################                    ] | 50% Completed |  5.0s[####################                    ] | 50% Completed |  5.1s[####################                    ] | 50% Completed |  5.2s[####################                    ] | 50% Completed |  5.3s[####################                    ] | 50% Completed |  5.4s[####################                    ] | 50% Completed |  5.5s[####################                    ] | 50% Completed |  5.6s[####################                    ] | 50% Completed |  5.7s[####################                    ] | 50% Completed |  5.8s[####################                    ] | 50% Completed |  5.9s[####################                    ] | 50% Completed |  6.0s[####################                    ] | 50% Completed |  6.1s[####################                    ] | 50% Completed |  6.2s[####################                    ] | 50% Completed |  6.3s[####################                    ] | 50% Completed |  6.4s[####################                    ] | 50% Completed |  6.5s[####################                    ] | 50% Completed |  6.6s[####################                    ] | 50% Completed |  6.7s[####################                    ] | 50% Completed |  6.8s[####################                    ] | 50% Completed |  6.9s[####################                    ] | 50% Completed |  7.0s[####################                    ] | 50% Completed |  7.1s[####################                    ] | 50% Completed |  7.2s[####################                    ] | 50% Completed |  7.3s[####################                    ] | 50% Completed |  7.4s[####################                    ] | 50% Completed |  7.5s[####################                    ] | 50% Completed |  7.6s[####################                    ] | 50% Completed |  7.7s[####################                    ] | 50% Completed |  7.8s[#######################                 ] | 58% Completed |  7.9s[#########################               ] | 63% Completed |  8.0s[###########################             ] | 67% Completed |  8.1s[###########################             ] | 67% Completed |  8.2s[###########################             ] | 67% Completed |  8.3s[###########################             ] | 67% Completed |  8.4s[###########################             ] | 67% Completed |  8.5s[###########################             ] | 67% Completed |  8.6s[###########################             ] | 67% Completed |  8.7s[#############################           ] | 73% Completed |  8.8s[##############################          ] | 76% Completed |  8.9s[##############################          ] | 76% Completed |  9.1s[##############################          ] | 76% Completed |  9.2s[###############################         ] | 79% Completed |  9.3s[####################################    ] | 90% Completed |  9.4s[####################################    ] | 90% Completed |  9.5s[########################################] | 100% Completed |  9.6s
Exception ignored in: <function Pool.__del__ at 0x2b87e052ba60>
Traceback (most recent call last):
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.2/lib/python3.8/multiprocessing/pool.py", line 268, in __del__
  File "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.2/lib/python3.8/multiprocessing/queues.py", line 362, in put
AttributeError: 'NoneType' object has no attribute 'dumps'
building file list ... done
./
Iso3kmlowU10Amp305f141B059MixRoughPatch100/
Iso3kmlowU10Amp305f141B059MixRoughPatch100/SliceMid.nc

sent 20,694,113 bytes  received 58 bytes  5,912,620.29 bytes/sec
total size is 110,952,553  speedup is 5.36
